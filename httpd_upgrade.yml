---
  - name: Execute HTTPD setup tasks
    hosts: httpd_servers
    gather_facts: no
    become: yes
    tasks:
      - name: Stop httpd_old service
        service:
          name: httpd_old
          state: stopped

      #######################################################################################################

      - name: Get installer directory httpd
        set_fact:
          httpd_installer_path: /opt/installer/httpd-2.4.48.tar.gz

      - name: display installer directory httpd
        debug:
          var: httpd_installer_path

      - name: Get installer directory apr
        set_fact:
          apr_installer_path: /opt/installer/apr-1.7.0.tar.gz

      - name: display installer directory apr
        debug:
          var: apr_installer_path

      - name: Get installer directory apr-util
        set_fact:
          apr_util_installer_path: /opt/installer/apr-util-1.6.1.tar.gz

      - name: display installer directory util
        debug:
          var: apr_util_installer_path

      #######################################################################################################

      # - name: Download installer httpd
      #   get_url:
      #     url: "https://archive.apache.org/dist/httpd/httpd-2.4.48.tar.gz"
      #     dest: "{{ directory_result.path }}"
      #     validate_certs: no
      #   register: httpd_download

      # - name: display httpd_download
      #   debug:
      #     var: httpd_download

      # - name: Download installer apr
      #   get_url:
      #     url: "https://archive.apache.org/dist/apr/apr-1.7.0.tar.gz"
      #     dest: "{{ directory_result.path }}"
      #     validate_certs: no
      #   register: apr_download

      # - name: display apr_download
      #   debug:
      #     var: apr_download

      # - name: Download installer apr-util
      #   get_url:
      #     url: "https://archive.apache.org/dist/apr/apr-util-1.6.1.tar.gz"
      #     dest: "{{ directory_result.path }}"
      #     validate_certs: no
      #   register: apr_util_download

      # - name: display apr_util_download
      #   debug:
      #     var: apr_util_download

      #######################################################################################################

      - name: Extract apr
        unarchive: 
          src: "{{ apr_installer_path }}"
          dest: "{{ directory_result.path }}"
          remote_src: yes
        register: apr_extracted

      - name: display apr_extracted
        debug:
          var: apr_extracted  

      - name: omit .tar.gz apr
        set_fact:
          apr_directory_path: "{{ apr_extracted.src | basename | regex_replace('\\.tar\\.gz$', '') }}"

      - name: Display directory without extension apr
        debug:
          var: apr_directory_path
      
      - name: Extract apr name
        set_fact:
          apr_directory_name: "{{ apr_extracted.src | basename | regex_replace('^([^\\-]+).*$', '\\1') }}"

      - name: Display apr name
        debug:
          var: apr_directory_name

      #######################################################################################################
      - name: Extract apr-util
        unarchive: 
          src: "{{ apr_util_installer_path }}"
          dest: "{{ directory_result.path }}"
          remote_src: yes
        register: apr_util_extracted

      - name: display apr_util_extracted
        debug:
          var: apr_util_extracted  

      - name: omit .tar.gz apr
        set_fact:
          apr_util_directory_path: "{{ apr_util_extracted.src | basename | regex_replace('\\.tar\\.gz$', '') }}"

      - name: Display omiited extension apr-util
        debug:
          var: apr_util_directory_path

      - name: extract apr-util name
        set_fact: 
          apr_util_directory_name: "{{ apr_util_extracted.src | basename | regex_replace('\\\\.tar\\\\.gz$', '') | regex_replace('(.+?-[^-]+)-.*$', '\\1') }}"

      - name:  apr-util
        debug:
          var: apr_util_directory_name

      #######################################################################################################

      - name: Copy apr files to httpd
        shell: "cp -r {{ directory_result.path }}/{{ apr_directory_path }} {{ directory_result.path }}/{{ httpd_directory_name }}/srclib/{{ apr_directory_name }}"
        register: copied_apr_files

      - name: Copy apr-util files to httpd
        shell: "cp -r {{ directory_result.path }}/{{ apr_util_directory_path }} {{ directory_result.path }}/{{ httpd_directory_name }}/srclib/{{ apr_util_directory_name }}"
        register: copied_apr_files

      #######################################################################################################

      # - name: Select the default Python
      #   command: "alternatives --config python"

      - name: Compile httpd
        shell: |
          ./buildconf
          ./configure --with-included-apr --prefix=/opt/apache2.4.48/ --enable-ssl --enable-so | grep -oP -- '--prefix=\K[^ ]+'
        args:
          chdir: "{{ directory_result.path }}/{{ httpd_directory_name }}"
        register: prefix_result

      - name: Display prefix_result
        debug:
          var: prefix_result

      - name: Install httpd
        shell: |
          make
          sudo make install
        args:
          chdir: "{{ directory_result.path }}/{{ httpd_directory_name }}"

      ######################################################################################################

      - name: Change directory ownership
        file:
          path: /opt/apache2.4.48_NEW/
          owner: apache
          group: apache
          recurse: yes

      - name: Create httpd_new service file
        copy:
          content: |
            [Unit]
            Description=The Apache HTTP
            After=network.target

            [Service]
            Type=forking
            ExecStart=/opt/apache2.4.48_NEW/bin/apachectl -k start
            ExecReload=/opt/apache2.4.48_NEW/bin/apachectl -k graceful
            ExecStop=/opt/apache2.4.48_NEW/bin/apachectl -k graceful-stop
            PIDFile=/opt/apache2.4.48_NEW/logs/httpd.pid

            PrivateTmp=true

            [Install]
            WantedBy=multi-user.target
          dest: /etc/systemd/system/httpd_new.service

      - name: Enable httpd_new service
        systemd:
          daemon_reload: yes
          name: httpd_new
          enabled: yes

      - name: Make a backup of the new conf file
        copy:
          src: "/opt/apache2.4.48_OLD/conf/httpd.conf"
          dest: "/opt/apache2.4.48_OLD/conf/httpd.conf.BAK" 

      # - name: Make a backup of the new conf file
      #   shell: "sudo mv /opt/apache2.4.48_OLD/conf/httpd.conf /opt/apache2.4.48_OLD/conf/httpd.conf.BAK"

      - name: Copy old conf file to new httpd folder
        ansible.builtin.copy:
          src: "/opt/apache2.4.48_OLD/conf/httpd.conf"
          dest: "/opt/apache2.4.48_NEW/conf/httpd.conf"

      # - name: Copy old conf file to new httpd folder
      #   shell: "sudo cp /opt/apache2.4.48_OLD/conf/httpd.conf /opt/apache2.4.48_NEW/conf/httpd.conf"

      - name: Create ssl folder and copy existing ssl and key to the new httpd folder
        file:
          path: /opt/apache2.4.48_NEW/ssl
          state: directory

      - name: Copy existing ssl and key to the new httpd folder
        copy:
          src: "/opt/apache2.4.48_OLD/ssl/{{ item }}"
          dest: "/opt/apache2.4.48_NEW/ssl/{{ item }}"
          remote_src: yes
        with_fileglob:
          - "/opt/apache2.4.48_OLD/ssl/*"

      # - name: Create ssl folder and copy existing ssl and key to the new httpd folder
      #   shell: "sudo cp /opt/apache2.4.48_OLD/ssl/* /opt/apache2.4.48_NEW/ssl/"

      - name: Start httpd_new service
        service:
          name: httpd_new
          state: started


      # - name: Download latest httpd and dependencies
      #   get_url:
      #     url: "{{ item.url }}"
      #     dest: "{{ item.dest }}"
      #   with_items:
      #     - { url: "https://archive.apache.org/dist/httpd/httpd-2.4.48.tar.gz", dest: "/opt/installer/httpd-2.4.48.tar.gz" }
      #     - { url: "https://archive.apache.org/dist/apr/apr-1.7.0.tar.gz", dest: "/opt/installer/apr-1.7.0.tar.gz" }
      #     - { url: "https://archive.apache.org/dist/apr/apr-util-1.6.1.tar.gz", dest: "/opt/installer/apr-util-1.6.1.tar.gz" }

      # - name: Extract the installers
      #   shell: "tar -zxvf {{ item }}.tar.gz"
      #   args:
      #     chdir: /opt/installer
      #   with_items:
      #     - httpd-2.4.48
      #     - apr-1.7.0
      #     - apr-util-1.6.1

      # - name: Copy apr files to httpd
      #   shell: "cp -r {{ item }} httpd-2.4.48/srclib/{{ item }}"
      #   args:
      #     chdir: /opt/installer
      #   with_items:
      #     - apr-1.7.0
      #     - apr-util-1.6.1

      # - name: Select the default Python
      #   shell: "sudo alternatives --config python"

      # - name: Compile httpd installer
      #   command: |
      #     ./buildconf
      #     ./configure --with-included-apr --prefix=/opt/apache2.4.48_NEW/ --enable-ssl --enable-so
      #     make
      #     sudo make install
      #   args:
      #     chdir: /opt/installer/httpd-2.4.48_NEW