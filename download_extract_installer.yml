  - name: download and extract installer
    hosts: httpd_servers
    gather_facts: no
    become: yes
    tasks:

      #######################################################################################################
      - name: create installer directory
        file:
          path: /opt/installer
          state: directory
        register: directory_result

      #######################################################################################################
      - name: Download installer httpd
        get_url:
          url: "https://archive.apache.org/dist/httpd/httpd-2.4.48.tar.gz"
          dest: "{{ directory_result.path }}"
          validate_certs: no
        register: httpd_download

      - name: Download installer apr
        get_url:
          url: "https://archive.apache.org/dist/apr/apr-1.7.0.tar.gz"
          dest: "{{ directory_result.path }}"
          validate_certs: no
        register: apr_download

      - name: Download installer apr-util
        get_url:
          url: "https://archive.apache.org/dist/apr/apr-util-1.6.1.tar.gz"
          dest: "{{ directory_result.path }}"
          validate_certs: no
        register: apr_util_download

      #######################################################################################################
      - name: Extract httpd
        unarchive: 
          src: "{{ httpd_download.dest }}"
          dest: "{{ directory_result.path }}"
          remote_src: yes
        register: httpd_extracted

      - name: omit .tar.gz httpd
        set_fact:
          httpd_directory_name: "{{ httpd_extracted.src | basename | regex_replace('\\.tar\\.gz$', '') }}"

      - name: Display directory without extension httpd
        debug:
          var: httpd_directory_name

      #######################################################################################################
      - name: Extract apr
        unarchive: 
          src: "{{ apr_download.dest }}"
          dest: "{{ directory_result.path }}"
          remote_src: yes
        register: apr_extracted

      - name: omit .tar.gz apr
        set_fact:
          apr_directory_name: "{{ apr_extracted.src | basename | regex_replace('\\.tar\\.gz$', '') }}"

      - name: Display directory without extension apr
        debug:
          var: apr_directory_name

      #######################################################################################################
      - name: Extract apr-util
        unarchive: 
          src: "{{ apr_util_download.dest }}"
          dest: "{{ directory_result.path }}"
          remote_src: yes
        register: apr_util_extracted

      - name: omit .tar.gz apr
        set_fact:
          apr_util_directory_name: "{{ apr_util_download.dest | basename | regex_replace('\\\\.tar\\\\.gz$', '') | regex_replace('(.+?-[^-]+)-.*$', '\\1') }}"
          ##apr_util_directory_name: "(( {{ apr_util_download.dest | basename | regex_replace('\\.tar\\.gz$', '') }}"

      - name: Display omiited extension apr-util
        debug:
          var: apr_util_directory_name

      # - name: extract apr-util only
      #   set_fact:
      #     apr_util_name: "{{ apr_util_directory_name | split('-')[0] }}"

      # - name: Display name apr-util
      #   debug:
      #     var: apr_util_name

      