---
  - name: Tomcat upgrade task
    hosts: "{{ specific_host }}"
    gather_facts: no
    become: yes

    ## specific_host
    ## tomcat_version 9.0.84
    ## existing_tomcat_service
    ## existing_tomcat_directory
    ## update_tomcat_service
    ## update_tomcat_directory

    tasks:
      - name: Stop existing tomcat service
        command: "systemctl stop {{ existing_tomcat_service }}.service"
        become: yes
        async: 100
        poll: 5
        register: stop_tomcat

      - name: Disable existing tomcat service
        command: "systemctl disable {{ existing_tomcat_service }}.service"

      - name: Existing tomcat status check
        command: "systemctl status {{ existing_tomcat_service }}.service"
        register: existing_tomcat_status
        ignore_errors: yes

      - name: Display existing tomcat status check
        debug:
          var: existing_tomcat_status

      - name: Download new apache tomcat version
        get_url: 
          url: https://archive.apache.org/dist/tomcat/tomcat-9/v{{tomcat_version}}/bin/apache-tomcat-{{tomcat_version}}.tar.gz
          dest: /opt/source/
          validate_certs: no
        register: tomcat_download

      - name: Extract tomcat
        unarchive:
          src: "{{ tomcat_download.dest }}"
          dest: /opt/source/
          remote_src: yes
        register: tomcat_extracted

      - name: Formating tomcat tomcat name
        set_fact:
          tomcat_directory_name: "{{ tomcat_extracted.src | basename | regex_replace('\\.tar\\.gz$', '') }}"

      - name: Move extracted tomcat directory to /opt directory
        command: "mv /opt/source/{{tomcat_directory_name}} /opt/{{update_tomcat_directory}}" 
        become: yes

      - name: Change new tomcat directory ownership 
        file:
          path: "/opt/{{update_tomcat_directory}}"
          owner: tomcat
          group: tomcat
          mode: "0775"
          recurse: yes
          # remote_src: yes
        register: change_ownership

      - name: Remove contents of conf folder
        file:
          path: "/opt/{{update_tomcat_directory}}/conf/"
          state: absent

      - name: Copy contents of existing conf directory to updated conf directory
        copy:
          src: "/opt/{{existing_tomcat_directory}}/conf/"
          dest: "/opt/{{update_tomcat_directory}}/conf/"
          remote_src: yes

      - name: Make a copy of the existing tomcat service for the updated tomcat service
        copy:
          src: "/etc/systemd/system/{{ existing_tomcat_service }}.service"
          dest: "/etc/systemd/system/{{ update_tomcat_service }}.service"
          remote_src: yes

      # - name: Create updated tomcat.service file with content
      #   copy:
      #     content: |
      #       [Unit]
      #       Description=Apache Tomcat Application Container
      #       Wants=network.target
      #       After=network.target

      #       [Service]
      #       Type=forking

      #       Environment=JAVA_HOME=/opt/openjdk11.0.11.9

      #       Environment=CATALINA_PID=/opt/{{update_tomcat_directory}}/temp/tomcat.pid
      #       Environment=CATALINA_HOME=/opt/{{update_tomcat_directory}}
      #       Environment='CATALINA_OPTS=-Xms128M -Xmx256M -Djava.net.preferIPv4Stack=true -Dapplication.module=job -Dapplication.environment.properties=/opt/config/PNDS/TSconf'
      #       Environment='JAVA_OPTS=-Djava.awt.headless=true'
      #       Environment='JAVA_OPTS=-Djava.library.path=/opt/cloudhsm/lib'
      #       Environment=SPRING_APPLICATION_JSON='{"TOKENGATEWAY": {"COREPATH": "file:/opt/config/","LOG4JAPI": "file:/opt/config/log4j2-api.xml"}}'

      #       ExecStart=/bin/bash /opt/{{update_tomcat_directory}}/bin/startup.sh
      #       ExecStop=/bin/bash /opt/{{update_tomcat_directory}}/bin/shutdown.sh
      #       SuccessExitStatus=143

      #       User=tomcat
      #       Group=tomcat
      #       UMask=0007
      #       Environment='UMASK=002'
      #       RestartSec=10
      #       Restart=always

      #       [Install]
      #       WantedBy=multi-user.target
      #     dest: /etc/systemd/system/{{ update_tomcat_service }}.service
      #   register: tomcat_service

      - name: Enable updated httpd service
        command: "systemctl enable {{ update_tomcat_service }}.service"
        become: yes

      - name: Start updated tomcat service
        command: "systemctl start {{ update_tomcat_service }}.service"
        become: yes
        async: 100
        poll: 5
        register: start_tomcat

      - name: Status check on the updated tomcat service
        command: "systemctl status {{ update_tomcat_service }}.service"
        become: yes
        register: upgraded_tomcat_status_check
        
      - name: Display status check on the updated tomcat service
        debug:
          var: upgraded_tomcat_status_check

      - name: Delete downloaded httpd installer
        file: 
          path: "/opt/source/{{ tomcat_version }}.tar.gz"
          state: absent 