---
  - name: test service facts
    hosts: httpd_servers
    gather_facts: no
    become: yes
    tasks:
      # - name: Gather facts about services
      #   service_facts:

      # - name: Display active services
      #   debug:
      #     var: ansible_facts.services

      # - name: Gather facts about services
      #   service_facts:

      # - name: Display active services
      #   debug:
      #     msg: "{{ item }}"
      #   loop: "{{ ansible_facts.services | selectattr('state', 'equalto', 'running') | map(attribute='name') | list }}"

      # - name: Find HTTPD-related service files
      #   find:
      #     paths: /etc/systemd/system
      #     patterns: 'httpd*.service'
      #     file_type: file
      #   register: httpd_services

      # - name: Create an array with HTTPD service names
      #   set_fact:
      #     httpd_services_array: "{{ httpd_services.files | map(attribute='path') | map('basename') | list }}"

      # - name: Display the HTTPD services array
      #   debug:
      #     var: httpd_services_array

      - name: Find HTTPD-related service files
        find:
          paths: /etc/systemd/system
          patterns: 'httpd*.service'
          file_type: file
        register: httpd_services

      - name: Extract service names to an array
        set_fact:
          httpd_service_names:
            "{{ httpd_services.files | map(attribute='path') | map('basename') | list }}"

      - name: Get state of HTTPD-related services
        command: "sudo systemctl status {{ item }}"
        loop: "{{ httpd_service_names }}"
        register: httpd_service_status
        changed_when: false
        failed_when: false
        ignore_errors: true

      # - name: Display httpd service status array
      #   debug:
      #     var: httpd_service_status

      - name: Create an array for active HTTPD services
        set_fact:
          active_httpd_services: "{{ httpd_service_status.results | selectattr('rc', 'eq', 0) | map(attribute='item') | list }}"

      - name: Display active HTTPD services
        debug:
          var: active_httpd_services